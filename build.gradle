buildscript {
    dependencies {
        classpath 'de.guntram.mcmod:crowdin-translate:1.3+1.17'
    }
    repositories {
        maven {
            name = 'CrowdinTranslate source'
            url = "https://minecraft.guntram.de/maven/"
        }
    }
}

plugins {
    id 'fabric-loom' version '0.11-SNAPSHOT'
    id "org.jetbrains.kotlin.jvm" version "1.6.20"
    id "io.freefair.lombok" version "6.4.1"
}

apply plugin: 'de.guntram.mcmod.crowdin-translate'

crowdintranslate.crowdinProjectName = 'phantom'
crowdintranslate.minecraftProjectName = 'abyss'
crowdintranslate.verbose = false


loom {
    accessWidenerPath = file("src/main/resources/abyss.accesswidener")
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    maven {
        url = "https://jitpack.io"
    }
    maven {
        url = "https://minecraft.guntram.de/maven/"
    }
    maven {
        name = "Modrinth"
        url = "https://api.modrinth.com/maven"
        content {
            includeGroup "maven.modrinth"
        }
    }
    maven { url = "https://repo.getfdp.today/" }
}

configurations {
    modIncludeImplementation
    includeImplementation

    include.extendsFrom modIncludeImplementation
    modImplementation.extendsFrom modIncludeImplementation

    include.extendsFrom includeImplementation
    implementation.extendsFrom includeImplementation
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    // Fabric API
    modIncludeImplementation("net.fabricmc:fabric-language-kotlin:${project.fabric_kotlin_version}")
    modImplementation("net.fabricmc.fabric-api:fabric-api:${project.fabric_version}")
    // 3'rd party mods for optimizations in IDE
    modImplementation "maven.modrinth:lazydfu:0.1.2"
    modIncludeImplementation("maven.modrinth:in-game-account-switcher:7.1.3-fa1.18")
    // Libraries
    includeImplementation("com.github.LlamaLad7:MixinExtras:0.0.6")
    annotationProcessor("com.github.LlamaLad7:MixinExtras:0.0.6")
    includeImplementation ":theme"
    includeImplementation("io.ktor:ktor-client-core:${project.ktor_version}")
    includeImplementation("io.ktor:ktor-client-cio:${project.ktor_version}")
    includeImplementation("io.ktor:ktor-client-websockets:${project.ktor_version}")
    includeImplementation("com.github.luben:zstd-jni:${project.zstd_version}")
    includeImplementation("com.github.ben-manes.caffeine:caffeine:${project.caffeine_version}")
    includeImplementation "com.labymedia:ultralight-java-base:${project.ultralight_version}"
    includeImplementation "com.labymedia:ultralight-java-databind:${project.ultralight_version}"
    //includeImplementation "com.labymedia:ultralight-java-gpu:${project.ultralight_version}"
    //includeImplementation "me.liuli:Elixir:1.1.0"
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    // Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
    it.options.release = 17
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

classes {
    dependsOn downloadTranslations
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "17"
    }
}
